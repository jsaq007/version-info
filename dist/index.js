"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("react/jsx-runtime"),n=require("react"),t="undefined"!=typeof document?document.currentScript:null;const r=(e,n="patch")=>{const t=(e.startsWith("v")?e.slice(1):e).split(".").map(Number);if(3!==t.length)return e;switch(n){case"major":t[0]+=1,t[1]=0,t[2]=0;break;case"minor":t[1]+=1,t[2]=0;break;default:t[2]+=1}return`${e.startsWith("v")?"v":""}${t.join(".")}`},o=e=>{try{"undefined"==typeof document?require("url").pathToFileURL(__filename).href:t&&"SCRIPT"===t.tagName.toUpperCase()&&t.src||new URL("index.js",document.baseURI).href,0}catch{}const n=[()=>globalThis.import?.meta?.env?.[e],()=>globalThis.__VITE_ENV__?.[e],()=>globalThis.VITE_ENV?.[e],()=>process.env?.[e],()=>window?.__ENV__?.[e]];for(let e=0;e<n.length;e++)try{const t=n[e]();if(t)return t}catch{}},s=e=>{if(!e)return;const n=parseInt(e,10);if(isNaN(n))return;return(n<1e10?new Date(1e3*n):new Date(n)).toISOString()},i=(e,n=7)=>e?e.slice(0,n):void 0,a=()=>({commitHash:"",shortHash:"",branch:""}),c=()=>({version:"0.0.0",name:"unknown"}),m=()=>{let e="development";try{"undefined"==typeof document?require("url").pathToFileURL(__filename).href:t&&"SCRIPT"===t.tagName.toUpperCase()&&t.src||new URL("index.js",document.baseURI).href,"undefined"!=typeof process&&process.env?.NODE_ENV?e=process.env.NODE_ENV:"undefined"!=typeof window&&window.__ENV__?.NODE_ENV&&(e=window.__ENV__.NODE_ENV)}catch{}return{nodeEnv:e,isProduction:"production"===e,isDevelopment:"development"===e,isTest:"test"===e,buildTime:Date.now()}},u=e=>{const n={version:"0.0.0",name:"unknown"},t={commitHash:"",shortHash:"",branch:""},i=m(),a=e?.productionVersion||o("VITE_VERSION"),c=e?.environment||o("VITE_APP_ENV")||i.nodeEnv,u=e?.packageVersion||o("VITE_PACKAGE_VERSION")||o("npm_package_version")||n.version,p=e?.commitHash||o("VITE_COMMIT_HASH")||o("GITHUB_SHA")||t.commitHash,h=e?.buildTime||s(o("VITE_BUILD_TIME"))||i.buildTime.toString(),d=c||"development";let l="v0.0.0",v=a||`v${n.version}`,_=u||n.version;const f=v.startsWith("v")?v.slice(1):v;return l="production"===d?v:_!==f?r(v):v,{version:l,buildTime:h,commitHash:p,environment:d,packageVersion:u,branch:t.branch,shortHash:t.shortHash,tag:t.tag}},p=(e,n)=>{const{showEnvironment:t=!0,showCommitHash:r=!0,showBuildTime:o=!1,showBranch:s=!1,showTag:a=!1}=n||{};let c=e.version.startsWith("v")?e.version:`v${e.version}`;if("production"===e.environment)return c;if(t&&e.environment&&"production"!==e.environment&&(c+=` (${e.environment})`),r&&e.commitHash&&(c+=` #${i(e.commitHash)}`),s&&e.branch&&"main"!==e.branch&&"master"!==e.branch&&(c+=` [${e.branch}]`),a&&e.tag&&(c+=` ${e.tag}`),o&&e.buildTime){c+=` @${new Date(e.buildTime).toISOString().split("T")[0]}`}return c},h=e=>n.useMemo(()=>u(e),[e?.productionVersion,e?.packageVersion,e?.environment,e?.commitHash,e?.buildTime]),d=e=>{const t=h(e);return n.useMemo(()=>p(t,e),[t,e?.showEnvironment,e?.showCommitHash,e?.showBuildTime])};exports.VersionDisplay=function({className:n=""}){const t=u();return e.jsx("span",{className:n,children:p(t)})},exports.VersionDisplayAdvanced=({className:n="",children:t,...r})=>{const o=h(r),s=d(r);return t?e.jsx(e.Fragment,{children:t(s,o)}):e.jsx("span",{className:n,"data-testid":"version-display",children:s})},exports.createVersionFormatter=e=>n=>p(n,e),exports.default=u,exports.detectBuildSystem=()=>"unknown",exports.formatVersion=p,exports.getEnvVar=o,exports.getEnvironmentInfo=m,exports.getGitInfo=a,exports.getPackageInfo=c,exports.getShortCommitHash=i,exports.getVersionInfo=u,exports.incrementVersion=r,exports.parseBuildTime=s,exports.useVersionDisplay=d,exports.useVersionInfo=h;
//# sourceMappingURL=index.js.map
